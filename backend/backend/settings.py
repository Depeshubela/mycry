"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from datetime import timedelta
import os
from pathlib import Path
import environ



#找env檔案
ROOT_DIR = (
    environ.Path(__file__) - 2
)

env = environ.Env()

environ.Env.read_env(str(ROOT_DIR.path(".env")))
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "django-insecure-qnmjrt$99!p(=@y)-k&65+phb3)fwdd#q^#ot@xbc@v66*%qg7"
SECRET_KEY = "django-insecure-qnmjrt$99!p(=@y)-k&65+phb3)fwdd#q^#ot@xbc@v66*%qg7"
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'simpleui',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "mcc",
    'rest_framework',
    'drf_yasg',
    'corsheaders',
    'django_prometheus',
    
]

MIDDLEWARE = [
    'django_prometheus.middleware.PrometheusBeforeMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'django_prometheus.middleware.PrometheusAfterMiddleware',
]

ROOT_URLCONF = "backend.urls"

AUTH_USER_MODEL = 'mcc.UserData'

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ['./templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     "default": {
#         # "ENGINE": "django.db.backends.sqlite3",
#         "ENGINE": "django_prometheus.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': "django.db.backends.postgresql",
        'NAME': "mycry",
        'USER': "postgres",
        'PASSWORD': "joy50923",
        'HOST': "mycry.cjmus6oeqzeh.ap-northeast-1.rds.amazonaws.com",
        'PORT': "5432",
    },
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "zh-Hant"

TIME_ZONE = "Asia/Taipei"

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL='/static/'
STATICFILES_DIRS=[os.path.join(BASE_DIR, 'static/')]
STATIC_ROOT='./static/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

#CORS
CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:5173",
#     "http://127.0.0.1:5173",
#     "http://localhost",
#     "http://127.0.0.1",
#     "http://192.168.100.129.5173",
# ]

CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
]
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

#JWT
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=10),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": False,

    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": "",
    "AUDIENCE": None,
    "ISSUER": None,
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "email",
    "USER_ID_CLAIM": "email",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),
}

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated', 
     ],
      'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ]
}

#寄信
OUTSIDE_EMAIL_BACKEND = env.str('OUTSIDE_EMAIL_BACKEND')
OUTSIDE_EMAIL_HOST = env.str('OUTSIDE_EMAIL_HOST')
OUTSIDE_EMAIL_PORT = env.int('OUTSIDE_EMAIL_PORT')

OUTSIDE_EMAIL_HOST_USER = env.str('OUTSIDE_EMAIL_HOST_USER')
OUTSIDE_EMAIL_HOST_PASSWORD = env.str('OUTSIDE_EMAIL_HOST_PASSWORD')
OUTSIDE_EMAIL_USE_SSL = env.bool('OUTSIDE_EMAIL_USE_SSL')

#網域
PROJECT_URL = env.str('PROJECT_URL')

#web3
ARB_SEPOLIA_RPC = env.str('ARB_SEPOLIA_RPC')
USDT_ABI_URL = env.str('USDT_ABI_URL')
MCC_ABI_URL = env.str('MCC_ABI_URL')
USDT_CONTRACT = env.str('USDT_CONTRACT')
MCC_CONTRACT = env.str('MCC_CONTRACT')


#AES
AES_ECB_KEY = env.str('AES_ECB_KEY')
AES_CTR_KEY = env.str('AES_CTR_KEY')

#註冊信Token有效期
REGISTER_CONFIRM_EXPIRY_TIME = eval(env.str('REGISTER_CONFIRM_EXPIRY_TIME'))

#redis
REDIS_HOST = env.str('REDIS_HOST')
REDIS_PORT = env.int('REDIS_PORT')
REDIS_DB = env.int('REDIS_DB')
CACHES = {
    "default": {
        "BACKEND": "django_prometheus.cache.backends.redis.RedisCache",
        "LOCATION": f"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DB}",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}

#SimpleUI
# -----------------------------------------------------------------

SIMPLEUI_LOGO = STATIC_URL + 'logo.png' 
SIMPLEUI_HOME_INFO = False 
SIMPLEUI_ANALYSIS = False 
SIMPLEUI_ANALYSIS = True
SIMPLEUI_INDEX = '#'
# 隐藏首页的快捷操作和最近动作
# SIMPLEUI_HOME_QUICK = False 
# SIMPLEUI_HOME_ACTION = False

# 设置右上角Home图标跳转链接，会以另外一个窗口打开
# SIMPLEUI_INDEX = 'https://www.baidu.com'

# SIMPLEUI_DEFAULT_THEME = 'purple.css'


# -----------------------------------------------------------------

#PROMETHEUS
# PROMETHEUS_EXPORT_MIGRATIONS = env.bool("PROMETHEUS_EXPORT_MIGRATIONS", True)
PROMETHEUS_EXPORT_MIGRATIONS = False
